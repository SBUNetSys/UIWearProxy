apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner rootProject.ext.android.testInstrumentationRunner
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    sourceSets {
        androidTest {
            res.srcDirs = ['src/androidTest/resources']
        }

        test {
            res.srcDirs = ['src/test/resources']
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile rootProject.ext.dependencies["gmswear"]
    compile rootProject.ext.dependencies["logger"]
    compile rootProject.ext.dependencies["support-v4"]
    compile rootProject.ext.dependencies["cardview-v7"]
    compile rootProject.ext.dependencies["recyclerview-v7"]
    compile rootProject.ext.dependencies["ioutil"]
    compile rootProject.ext.dependencies["rxjava"]
    compile rootProject.ext.dependencies["rxandroid"]
    compile rootProject.ext.dependencies["glide"]


    testCompile rootProject.ext.dependencies["junit"]
    testCompile rootProject.ext.dependencies["mockito"]
    testCompile rootProject.ext.dependencies["robolectric"]
    androidTestCompile rootProject.ext.dependencies["testrunner"]
    androidTestCompile rootProject.ext.dependencies["testrules"]
    androidTestCompile rootProject.ext.dependencies["support-v4"]
}

preBuild.dependsOn 'checkstyle'
